#
# Perform read trimming and quality filtering.
#

# Makefile preamble.
SHELL := bash
.DELETE_ON_ERROR:
.ONESHELL:
.SHELLFLAGS := -eu -o pipefail -c
MAKEFLAGS += --warn-undefined-variables --no-print-directory

# Absolute path of parent directory.
ROOT_PATH = $(shell dirname $(abspath $(firstword $(MAKEFILE_LIST))))

# Micromamba environment.
ENV = bf-qc

# Run command within environment.
ENV_RUN = micromamba run -n $(ENV)

# The input pair-end reads.
P1 ?= reads/read_1.fq
P2 ?=

# Extract the extension from PE reads.
EXT1 = $(suffix $(P1))
EXT2 = $(suffix $(P2))

# Build the output name for the read pairs.
R1 = $(basename $(P1)).trimmed$(EXT1)

# Run in single-end mode if P2 is not specified.
ifeq ($(P2),)
R2 =
else
R2 = $(basename $(P2)).trimmed$(EXT2)
endif

# Reports generated by fastp.
FASTP_JSON = $(basename $(R1)).fastp.json
FASTP_HTML = $(basename $(R1)).fastp.html

# Number of worker threads.
THREADS ?= 2

# Adapter sequence for trimming.
ADAPTER ?=

# Display usage.
help:
	@echo "#"
	@echo "# fastp.mk: trim adapters and filter FASTQ files using fastp"
	@echo "#"
	@echo "# P1=$(P1)"
	@echo "# P2=$(P2)"
	@echo "#"
	@echo "# R1=$(R1)"
	@echo "# R2=$(R2)"
	@echo "#"
	@echo "# make run|clean|test|install"

FASTP_OPTS ?= $(if $(ADAPTER),--adapter_sequence $(ADAPTER)) \
							--cut_right --cut_right_window_size 4 \
							--cut_right_mean_quality 30 \
							--length_required 50 \
							-j $(FASTP_JSON) -h $(FASTP_HTML)

# Compose fastp command based on input reads.
ifeq ($(P2),)
fastp_cmd = fastp -i $(P1) -o $(R1) -w $(THREADS) $(FASTP_OPTS)
else
fastp_cmd = fastp -i $(P1) -I $(P2) -o $(R1) -O $(R2) -w $(THREADS) $(FASTP_OPTS)
endif

# Pair-end read 1 must exist.
$(P1):
	@echo "# Error: input file for read #1 not found (P1=$(P1))"
	@exit -1

# If R2 is set, PE2 must exist.
ifneq ($(PE2),)
$(P2):
	@echo "# Error: input file for read #2 not found (P2=$(P2))"
	@exit -1
endif

# Perform read trimming.
$(R1) $(R2): $(P1) $(P2)
	mkdir -p $(dir $(R1))
	$(ENV_RUN) $(fastp_cmd)

# Run the trimming.
run: $(R1) $(R2)
	@ls -lh $(R1) $(R2)

# Remove the trimmed files.
run!:
	rm -f $(R1) $(R2)

# Alternative rule for run!
clean: run!

# Test the module.
test::
	make -f $(dir $(ROOT_PATH))fetch/sra.mk SRR=SRR1553425 N=1000
	make -f $(ROOT_PATH)/fastp.mk run! run P1=reads/SRR1553425_1.fastq run
	make -f $(ROOT_PATH)/fastp.mk run! run P1=reads/SRR1553425_1.fastq P2=reads/SRR1553425_2.fastq run

# Command for installing dependencies.
install::
	@echo micromamba install fastp

# Rules without target files.
.PHONY: help run run! clean install
