#
# Retrieve protein structures from the Protein Data Bank.
#

# Makefile preamble.
SHELL := bash
.DELETE_ON_ERROR:
.ONESHELL:
.SHELLFLAGS := -eu -o pipefail -c
MAKEFLAGS += --warn-undefined-variables --no-print-directory

# Absolute path of parent directory.
ROOT_PATH = $(shell dirname $(abspath $(firstword $(MAKEFILE_LIST))))

# Micromamba environment.
ENV = bf-fetch-pdb

# Run command within environment.
ENV_RUN = micromamba run -n $(ENV)

# PDB identifier.
ID ?= 7FCD

# Output diretory.
DIR ?= data

# Target path to PDB file.
PDB = $(DIR)/$(ID).pdb

# Print usage.
help:
	@echo ""
	@echo "pdb.mk: download protein structures from the PDB"
	@echo ""
	@echo "Usage:"
	@echo "  make -f pdb.mk [options]"
	@echo ""
	@echo "Commands:"
	@echo "  run            retrieve a structure file from PDB"
	@echo "  get            an alias for 'get'"
	@echo "  install        initialize conda environment"
	@echo "  clean          remove all output generated by this program"
	@echo ""
	@echo "Options:"
	@echo "  ID             a PDB identifier"
	@echo "  DIR            a directory for storing the PDB file (optional)"
	@echo ""

example:
	@echo ""
	@echo "# Retrieve the protein structure of avian hemagglutinin H5"
	@echo "make -f pdb.mk ID=1JSN run"
	@echo ""

${PDB}:
	# Create output directory.
	mkdir -p ${DIR}

	# Dowload protein structure.
	${ENV_RUN} pdb_fetch ${ID} > ${PDB}

run: ${PDB}
	@ls -lh ${PDB}

# Alias for get.
get: run

# Run the test suite.
test:
	make -f ${ROOT_PATH}/pdb.mk ID=${ID} run

# Delete PDB file.
run!: ${PDB}
	rm -f ${PDB}

# Alternative rule for run!
clean: run!

DEPS := pdb-tools
# Display dependencies.
install::
	micromamba create -n ${ENV}
	${ENV_RUN} micromamba install ${DEPS} --yes

# Non-file targets.
.PHONY: help example run test run! clean install
