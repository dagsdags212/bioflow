#
# Aggregate FASTQC reports into a single interface.
#

# Makefile preamble.
SHELL := bash
.DELETE_ON_ERROR:
.ONESHELL:
.SHELLFLAGS := -eu -o pipefail -c
MAKEFLAGS += --warn-undefined-variables --no-print-directory

# Absolute path of parent directory.
ROOT_PATH = ${shell dirname ${abspath ${firstword ${MAKEFILE_LIST}}}}

# Micromamba environment.
ENV = bf-qc-multiqc

# Run command within environment.
ENV_RUN = micromamba run -n ${ENV}

# Directory containing FASTQC reports.
DIR ?= fastqc

# Output directory to store report.
OUT ?= multiqc

# Display usage.
help::
	@echo ""
	@echo "multiqc.mk: consolidate multiple FASTQC reports"
	@echo ""
	@echo "Usage:"
	@echo "  make -f multiqc.mk [options] DIR=<dir>"
	@echo ""
	@echo "Commands:"
	@echo "  run            consolidate FASTQC output into a single report"
	@echo "  install        initialize conda environment"
	@echo "  clean          remove all output generated by this program"
	@echo ""
	@echo "Options:"
	@echo "  DIR            a directory path containing FASTQC reports"
	@echo "  OUT            a directory path for storing MULTIQC output"
	@echo ""

# Fastqc options.
multiqc_opts ?= --clean-up --verbose

# Directory storing reads must exist.
${DIR}:
	@echo "Error: input directory containing FASTQC reports not found {DIR=${DIR}}"
	@exit -1

# Run multiqc.
${OUT}: ${DIR}
	# Create directory for multiqc output.
	mkdir -p $@

	# Consolidate FASTQC reports.
	${ENV_RUN} multiqc ${multiqc_opts} -o ${OUT} ${DIR}

# Generate fastqc reports.
run: ${OUT}
	@ls -lh ${OUT}

# Remove generated reports.
run!:
	rm -rf ${OUT}

# Alternative rule for run!
clean: run!

# Run test suite.
test::
	make -f $(dir ${ROOT_PATH})fetch/sra.mk SRR=SRR1553425 N=1000 DIR=reads
	make -f ${ROOT_PATH}/fastqc.mk run! run DIR=reads OUT=${DIR}
	make -f ${ROOT_PATH}/multiqc.mk run! run DIR=${DIR} OUT=${OUT}

DEPS := multiqc
# Command for installing dependencies.
install::
	micromamba create -n ${ENV}
	${ENV_RUN} micromamba install ${DEPS} --yes

# Rules without target files.
.PHONY: help run run! clean install
