#
# Map reads against a reference using bwa.
#

# Makefile preamble.
SHELL := bash
.DELETE_ON_ERROR:
.ONESHELL:
.SHELLFLAGS := -eu -o pipefail -c
MAKEFLAGS += --warn-undefined-variables --no-print-directory

# Micromamba environment.
ENV = bf-mapping-bwa

# Run command within environment.
ENV_RUN = micromamba run -n ${ENV}

# Number of worker threads.
THREADS ?= 4

# First in read pair.
R1 ?=

# Second in read pair, if any.
R2 ?=

# The reference genome.
REF ?=

# Output dirctory for BAM files.
DIR ?= bam

# Basename of FASTQ file.
BASENAME = $(notdir $(basename ${R1}))

# The alignment file.
BAM ?= ${DIR}/${BASENAME}.bwa.bam

# The bwa index prefix.
IDX ?= $(basename ${REF})

# File in the index directory.
IDX_FILE = ${IDX}.acc

# Set attributes for the read group.
ID ?= run1
SM ?= sample1
LB ?= library1
PL ?= ILLUMINA
RG ?= "@RG\tID:${ID}\tSM:${SM}\tLB:${LB}\tPL:${PL}"


# Print the help message.
help::
	@echo ""
	@echo "bwa.mk: align reads using BWA"
	@echo ""
	@echo "Usage:"
	@echo "  make -f bwa.mk [options] <command>"
	@echo ""
	@echo "Commands:"
	@echo "  align          align sequencing reads against a reference"
	@echo "  run            an alias for 'align'"
	@echo "  index          generate a BAM index"
	@echo "  stats          print out mapping statistics"
	@echo "  install        initialize conda environment"
	@echo "  clean          remove all output generated by this program"
	@echo ""
	@echo "Options:"
	@echo "  REF            a reference file"
	@echo "  R1             first of read-pair in FASTA format"
	@echo "  R2             second of read-pair in FASTA format"
	@echo "  DIR            a directory path for storing BAM files"
	@echo "  IDX            index of reference file"
	@echo "  THREADS        number of worker threads (default: 4)"
	@echo ""

# Read 1 must exist.
${R1}:
	@echo "# Error: Read 1 not found {R1=${R1}}"
	@exit -1

# If set, read 2 must also exist.
ifneq (${R2},)
${R2}:
	@echo "# Error: Read 2 not found {R2=${R2}}"
endif

# Reference file must exist.
${REF}:
	@if [ ! -f ${REF} ]; then
		echo "# Error: Reference file not found (REF=${REF})"
		exit -1
	fi

# Generate bwa index for reference.
${IDX_FILE}: ${REF}
	# Create output directory for bwa index.
	mkdir -p $(dir $@)

	# Generate bwa index for the reference.
	${ENV_RUN} bwa index ${REF}

# Invoke reference indexing.
index: ${REF} ${IDX_FILE}
	@echo "bwa index: ${IDX}"

# Remove the index.
index!:
	rm -f ${IDX_FILE}

# bwa options.
FLAGS := -t ${THREADS} -R ${RG}

# Generate a sorted alignment file.
${BAM}: ${IDX_FILE} ${R1} ${R2}
	# Output directory for BAM files.
	mkdir -p ${dir $@}

	# Perform read mapping.
	${ENV_RUN} bwa mem ${FLAGS} ${REF} ${R1} ${R2} \
	  | ${ENV_RUN} samtools view -b \
	  | ${ENV_RUN} samtools sort -@ ${THREADS} > $@

# Create the BAM index.
${BAM}.bai: ${BAM}
	${ENV_RUN} samtools index ${BAM}

# Invoke the read mapping rule.
align: ${BAM}.bai
	@ls -lh ${BAM}

# Alias for 'align'.
run: align

# Generate alignment statistics.
stats:
	@echo "==================== MAPPING STATISTICS ===================="
	${ENV_RUN} samtools flagstat ${BAM}
	echo "============================================================"

# Alias for 'stats' target.
stat: stats

# Remove output BAM files.
run!:
	rm -f ${BAM} ${BAM}.bai

# Alias for 'run!'.
clean: run!

# Run test suite.
test:
	make -f ${BIOFLOW}/src/fetch/bioproject.mk ID=PRJNA257197 run
	make -f ${BIOFLOW}/src/fetch/genbank.mk ACC=AF086833 fasta
	head -3 PRJNA257197_accessions.txt \
	  | parallel -- make -f ${BIOFLOW}/src/fetch/sra.mk SRR={} N=1000 run
	make -f ${BIOFLOW}/src/mapping/bwa.mk R1=reads/SRR1553426.fastq REF=refs/AF086833.fa THREADS=8 run

DEPS := bwa samtools
# Initialize conda environment.
install::
	micromamba create -n ${ENV}
	${ENV_RUN} micromamba install ${DEPS} --yes

# Targets that are not files.
.PHONY: help run run! index align stats install test
